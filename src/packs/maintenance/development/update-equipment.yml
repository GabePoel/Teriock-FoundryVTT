name: Update Equipment
type: script
_id: NccvZMMNyFS0braS
author: teriockBuilder00
img: systems/teriock/src/icons/documents/equipment.svg
scope: global
command: |-
  const equipmentPack = game.teriock.packs.equipment();

  const progress = foundry.ui.notifications.info(
    "Pulling all equipment from wiki.",
    {
      pct: 0.01,
      progress: true,
    },
  );

  async function processEquipment(equipmentName) {
    let equipmentItem = equipmentPack.index.find((e) => e.name === equipmentName);
    if (!equipmentItem) {
      equipmentItem = await game.teriock.Item.create(
        {
          name: equipmentName,
          type: "equipment",
          system: {
            equipmentType: equipmentName,
          },
        },
        { pack: "teriock.equipment" },
      );
    } else {
      equipmentItem = await foundry.utils.fromUuid(equipmentItem.uuid);
    }
    await equipmentItem.system.wikiPull({ notify: false });
    await equipmentItem.update({ "system.description": "" });
    return {
      equipmentName,
      success: true,
    };
  }

  // Process in batches of 50
  const allEquipment = Object.values(TERIOCK.index.equipment);
  const batchSize = 50;
  let processedCount = 0;

  try {
    for (let i = 0; i < allEquipment.length; i += batchSize) {
      const batch = allEquipment.slice(i, i + batchSize);

      await Promise.all(
        batch.map((equipmentName) => processEquipment(equipmentName)),
      );

      processedCount += batch.length;

      const pct = Math.min(processedCount / allEquipment.length, 0.99);
      progress.update({
        pct: pct,
        message: `Processed ${processedCount} of ${allEquipment.length} equipment items...`,
      });
    }

    progress.update({
      pct: 1,
      message: "Done.",
    });

    foundry.ui.notifications.success(
      `Successfully processed ${allEquipment.length} equipment items.`,
    );
  } catch (error) {
    progress.update({
      pct: 1,
      message: `Error: ${error.message}`,
    });
  }
folder: L08qIbjJoCwEaiEi
ownership:
  default: 0
flags: {}
_stats:
  coreVersion: '13'
  systemId: teriock
  systemVersion: 0.1.0
  lastModifiedBy: teriockBuilder00
_key: '!macros!NccvZMMNyFS0braS'
