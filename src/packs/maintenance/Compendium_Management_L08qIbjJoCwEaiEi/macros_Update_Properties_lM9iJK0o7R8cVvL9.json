{
  "name": "Update Properties",
  "type": "script",
  "_id": "lM9iJK0o7R8cVvL9",
  "author": "uxE8DDp7ujgsxtd2",
  "img": "systems/teriock/src/icons/documents/property.svg",
  "scope": "global",
  "command": "const propertiesPack = game.teriock.packs.properties();\n\nconst progress = ui.notifications.info(`Pulling all properties from wiki.`, {\n  progress: true,\n});\n\nasync function processProperty(propertyName, _index, _total) {\n\n  let propertyItem = propertiesPack.index.find((e) => e.name === propertyName);\n  if (!propertyItem) {\n    propertyItem = await game.teriock.Item.create(\n      {\n        name: propertyName,\n        type: \"wrapper\",\n      },\n      { pack: \"teriock.properties\" },\n    );\n  } else {\n    propertyItem = await foundry.utils.fromUuid(propertyItem.uuid);\n  }\n  let propertyEffect = propertyItem.properties.find(\n    (a) => a.name === propertyName,\n  );\n\n  if (!propertyEffect) {\n    propertyEffect = await game.teriock.api.create.property(\n      propertyItem,\n      propertyName,\n      { notify: false },\n    );\n  } else {\n    await propertyEffect.system.wikiPull({ notify: false });\n  }\n\n  if (propertyItem.img !== propertyEffect.img) {\n    await propertyItem.update({ img: propertyEffect.img });\n  }\n\n  return { propertyName: propertyName, success: true };\n}\n\nconst BATCH_SIZE = 50;\nconst total = Object.values(CONFIG.TERIOCK.index.properties).length;\nconst results = [];\n\nprogress.update({\n  pct: 0.1,\n  message: `Processing ${total} properties in batches of ${BATCH_SIZE}...`,\n});\n\ntry {\n  for (let start = 0; start < total; start += BATCH_SIZE) {\n    const batch = Object.values(CONFIG.TERIOCK.index.properties).slice(start, start + BATCH_SIZE);\n\n    const batchPromises = batch.map((propertyName, i) =>\n      processProperty(propertyName, start + i, total),\n    );\n\n    const batchResults = await Promise.all(batchPromises);\n    results.push(...batchResults);\n\n    const processed = Math.min(start + batch.length, total);\n    const pct = 0.1 + 0.9 * (processed / total);\n\n    progress.update({\n      pct: Math.min(pct, 1),\n      message: `Processed ${processed}/${total} properties (batch ${Math.floor(start / BATCH_SIZE) + 1}/${Math.ceil(total / BATCH_SIZE)}).`,\n    });\n  }\n\n  progress.update({\n    pct: 1,\n    message: `Successfully processed ${results.length} properties.`,\n  });\n\n  console.log(\n    `Completed processing ${results.length} properties:`,\n    results.map((r) => r.propertyName),\n  );\n} catch (error) {\n  progress.update({\n    pct: 1,\n    message: `Error occurred during processing: ${error.message}`,\n  });\n  console.error(\"Error processing properties:\", error);\n}",
  "folder": "L08qIbjJoCwEaiEi",
  "sort": -100000,
  "ownership": {
    "default": 0,
    "uxE8DDp7ujgsxtd2": 3
  },
  "flags": {},
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "exportSource": null,
    "coreVersion": "13.345",
    "systemId": "teriock",
    "systemVersion": "0.1.0",
    "createdTime": 1754457994527,
    "modifiedTime": 1757097180165,
    "lastModifiedBy": "Z8sCTHO0edFF1hYo"
  },
  "_key": "!macros!lM9iJK0o7R8cVvL9"
}
