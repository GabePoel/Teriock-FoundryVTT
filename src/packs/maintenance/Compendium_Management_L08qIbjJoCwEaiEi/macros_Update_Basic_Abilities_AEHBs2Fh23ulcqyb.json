{
  "name": "Update Basic Abilities",
  "type": "script",
  "_id": "AEHBs2Fh23ulcqyb",
  "author": "qf5JYGZKzM588nE6",
  "img": "modules/game-icons-net/whitetransparent/skills.svg",
  "scope": "global",
  "command": "const basicAbilitiesItem = await game.teriock.api.fetch.getItem(\n  \"Basic Abilities\",\n  \"essentials\",\n);\n\nconst basicAbilityNames =\n  await game.teriock.api.wiki.fetchCategoryAbilities(\"Basic abilities\");\n\nconst progress = ui.notifications.info(`Pulling basic abilities from wiki.`, {\n  progress: true,\n});\n\n/**\n * Processes a single basic ability\n * @param {string} basicAbilityName - The name of the basic ability to process\n * @returns {Promise<Object>} Promise that resolves with processing result\n */\nasync function processBasicAbility(basicAbilityName) {\n  let basicAbility = basicAbilitiesItem.abilities.find(\n    (a) => a.name === basicAbilityName,\n  );\n  \n  if (!basicAbility) {\n    basicAbility = await game.teriock.api.create.ability(\n      basicAbilitiesItem,\n      basicAbilityName,\n    );\n  }\n\n  await basicAbility.system.wikiPull({ notify: false });\n\n  return { abilityName: basicAbilityName, success: true };\n}\n\n// Create array of promises for parallel processing\nconst abilityPromises = basicAbilityNames.map(basicAbilityName => \n  processBasicAbility(basicAbilityName)\n);\n\n// Update progress to show processing has started\nprogress.update({ \n  pct: 0.1, \n  message: `Processing ${basicAbilityNames.length} basic abilities in parallel...` \n});\n\n// Execute all basic ability processing in parallel\ntry {\n  const results = await Promise.all(abilityPromises);\n  \n  // Update progress to show abilities processed\n  progress.update({ \n    pct: 0.8, \n    message: `Successfully processed ${results.length} abilities. Cleaning up...` \n  });\n  \n  console.log(`Processed basic abilities:`, results.map(r => r.abilityName));\n  \n  // Clean up - delete abilities that are no longer in the basic ability names list\n  const toDelete = basicAbilitiesItem.abilities\n    .filter((a) => !basicAbilityNames.includes(a.name))\n    .map((a) => a.id);\n    \n  if (toDelete.length > 0) {\n    await basicAbilitiesItem.deleteEmbeddedDocuments(\"ActiveEffect\", toDelete);\n    console.log(`Deleted ${toDelete.length} obsolete abilities`);\n  }\n  \n  // Final progress update\n  progress.update({ \n    pct: 1, \n    message: `Completed processing ${results.length} basic abilities.` \n  });\n  \n} catch (error) {\n  progress.update({ \n    pct: 1, \n    message: `Error occurred during processing: ${error.message}` \n  });\n  console.error(\"Error processing basic abilities:\", error);\n}",
  "folder": "L08qIbjJoCwEaiEi",
  "sort": 100000,
  "ownership": {
    "default": 0,
    "qf5JYGZKzM588nE6": 3
  },
  "flags": {},
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "exportSource": null,
    "coreVersion": "13.345",
    "systemId": "teriock",
    "systemVersion": "0.1.0",
    "createdTime": 1753659319940,
    "modifiedTime": 1755752996613,
    "lastModifiedBy": "qf5JYGZKzM588nE6"
  },
  "_key": "!macros!AEHBs2Fh23ulcqyb"
}
