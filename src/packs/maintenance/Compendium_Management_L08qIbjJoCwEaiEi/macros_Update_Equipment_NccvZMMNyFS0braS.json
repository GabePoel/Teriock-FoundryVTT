{
  "name": "Update Equipment",
  "type": "script",
  "_id": "NccvZMMNyFS0braS",
  "author": "IIjfAJm5Tf1B6G7t",
  "img": "systems/teriock/assets/equipment.svg",
  "scope": "global",
  "command": "const equipmentPack = game.teriock.packs.equipment();\nconst equipmentFolders = equipmentPack.folders;\nconst assignedProperties = [\"Magelore\", \"Master Crafted\", \"Runic\", \"Silver\"];\n\nfunction generateCombinations(arr) {\n  const results = [];\n  for (let len = 1; len <= arr.length; len++) {\n    const combine = (prefix, rest, depth) => {\n      if (depth === 0) {\n        results.push(prefix);\n        return;\n      }\n      for (let i = 0; i < rest.length; i++)\n        combine([...prefix, rest[i]], rest.slice(i + 1), depth - 1);\n    };\n    combine([], arr, len);\n  }\n  return results;\n}\n\nconst propertyMap = { \"Basic Equipment\": [] };\n\nconst progress = ui.notifications.info(`Pulling equipment from wiki.`, {\n  progress: true,\n});\nlet pct = 0;\n\nconst combinations = generateCombinations(assignedProperties);\ncombinations.sort((a, b) =>\n  a.length !== b.length\n    ? a.length - b.length\n    : a.join(\" \").localeCompare(b.join(\" \")),\n);\nfor (const combo of combinations)\n  propertyMap[combo.join(\" \") + \" Equipment\"] = combo;\n\nconst limiter = (limit) => {\n  let active = 0,\n    queue = [];\n  const next = () => {\n    if (!queue.length || active >= limit) return;\n    active++;\n    const { fn, resolve, reject } = queue.shift();\n    Promise.resolve(fn())\n      .then(resolve, reject)\n      .finally(() => {\n        active--;\n        next();\n      });\n  };\n  return (fn) =>\n    new Promise((resolve, reject) => {\n      queue.push({ fn, resolve, reject });\n      next();\n    });\n};\n\nconst TeriockItem = CONFIG.Item.documentClass;\nconst equipmentTypes = Object.values(CONFIG.TERIOCK.index.equipment);\nconst totalJobs = equipmentTypes.length * Object.keys(propertyMap).length;\nlet completed = 0;\n\nconst folders = Object.fromEntries(\n  await Promise.all(\n    Object.entries(propertyMap).map(async ([folderName, properties]) => {\n      ui.notifications.warn(folderName);\n      let folder = equipmentFolders.getName(folderName);\n      if (!folder) {\n        folder = await CONFIG.Folder.documentClass.create(\n          {\n            name: folderName,\n            type: \"Item\",\n          },\n          { pack: \"teriock.equipment\" },\n        );\n      }\n      return [folderName, { id: folder.id, properties }];\n    }),\n  ),\n);\n\nconst limit = limiter(8);\nawait Promise.all(\n  Object.entries(folders).flatMap(([_, { id, properties }]) =>\n    equipmentTypes.map((eo) =>\n      limit(async () => {\n        const generatedName = `${properties.join(\" \")} ${eo}`.trim();\n\n        const matches = equipmentPack.index.filter(\n          (e) => e.name === generatedName,\n        );\n        await Promise.all(\n          matches.map(async (m) => {\n            const entry = await foundry.utils.fromUuid(m.uuid);\n            if (entry) await entry.delete();\n          }),\n        );\n\n        const equipment = await TeriockItem.create(\n          {\n            name: generatedName,\n            type: \"equipment\",\n            folder: id,\n            system: { equipmentType: eo },\n          },\n          { pack: \"teriock.equipment\" },\n        );\n        await equipment.system.wikiPull({ notify: false });\n\n        if (properties.length >= 1) {\n          for (const property of properties) {\n            if (\n              !equipment.effectKeys.property.has(\n                game.teriock.api.string.toCamelCase(property),\n              )\n            ) {\n              await game.teriock.api.fetch.importProperty(equipment, property);\n              if (property === \"Runic\") {\n                await equipment.update({\n                  \"system.powerLevel\": \"enchanted\",\n                });\n              }\n            }\n          }\n          if (equipment.system.equipmentClasses.has(\"bodyParts\")) {\n            try {\n              await equipment.delete();\n            } catch {}\n          }\n        }\n\n        completed++;\n        pct = completed / totalJobs;\n        progress.update({\n          pct,\n          message: `Pulling ${generatedName} from wiki.`,\n        });\n      }),\n    ),\n  ),\n);\n\nprogress.update({ pct: 1 });",
  "folder": "L08qIbjJoCwEaiEi",
  "sort": 50000,
  "ownership": {
    "default": 0,
    "IIjfAJm5Tf1B6G7t": 3
  },
  "flags": {},
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "exportSource": null,
    "coreVersion": "13.345",
    "systemId": "teriock",
    "systemVersion": "0.1.0",
    "createdTime": 1753132368604,
    "modifiedTime": 1757047905308,
    "lastModifiedBy": "Z8sCTHO0edFF1hYo"
  },
  "_key": "!macros!NccvZMMNyFS0braS"
}
