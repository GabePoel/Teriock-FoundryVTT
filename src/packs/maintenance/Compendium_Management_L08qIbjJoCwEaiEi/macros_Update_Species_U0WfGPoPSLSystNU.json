{
  "folder": "L08qIbjJoCwEaiEi",
  "name": "Update Species",
  "type": "script",
  "_id": "U0WfGPoPSLSystNU",
  "author": "qf5JYGZKzM588nE6",
  "img": "systems/teriock/src/icons/documents/species.svg",
  "scope": "global",
  "command": "const speciesPack = game.teriock.packs.species();\nconst speciesFolders = speciesPack.folders;\n\nconst allSpeciesFolderName = \"Monster Species\";\nconst characterSpeciesFolderName = \"Character Species\";\nconst commonAnimalSpeciesFolderName = \"Common Animal Species\";\nconst undeadSpeciesFolderName = \"Undead Species\";\nlet allSpeciesFolder = speciesFolders.getName(allSpeciesFolderName);\nlet characterSpeciesFolder = speciesFolders.getName(characterSpeciesFolderName);\nlet commonAnimalSpeciesFolder = speciesFolders.getName(commonAnimalSpeciesFolderName);\nlet undeadSpeciesFolder = speciesFolders.getName(undeadSpeciesFolderName);\nif (!allSpeciesFolder) {\n  await Folder.create(\n    {\n      name: allSpeciesFolderName,\n      type: \"Item\",\n    },\n    {\n      pack: \"teriock.species\",\n    },\n  );\n}\nif (!characterSpeciesFolder) {\n  await Folder.create(\n    {\n      name: characterSpeciesFolderName,\n      type: \"Item\",\n    },\n    {\n      pack: \"teriock.species\",\n    },\n  );\n}\nif (!commonAnimalSpeciesFolder) {\n  await Folder.create(\n    {\n      name: commonAnimalSpeciesFolderName,\n      type: \"Item\",\n    },\n    {\n      pack: \"teriock.species\",\n    },\n  );\n}\nif (!undeadSpeciesFolder) {\n  await Folder.create(\n    {\n      name: undeadSpeciesFolderName,\n      type: \"Item\",\n    },\n    {\n      pack: \"teriock.species\",\n    },\n  );\n}\n\nconst progress = ui.notifications.info(\"Pulling all creatures from wiki.\", {\n  progress: true,\n});\n\nasync function processSpecies(speciesName, _index, _total) {\n  let speciesItem = speciesPack.index.find((e) => e.name === speciesName);\n  let folder = allSpeciesFolder;\n  if (Object.values(CONFIG.TERIOCK.index.humanoids).includes(speciesName)) folder = characterSpeciesFolder;\n  if (Object.values(CONFIG.TERIOCK.index.commonAnimals).includes(speciesName)) folder = commonAnimalSpeciesFolder;\n  if (Object.values(CONFIG.TERIOCK.index.undead).includes(speciesName)) folder = undeadSpeciesFolder;\n  if (!speciesItem) {\n    speciesItem = await game.teriock.Item.create(\n      {\n        name: speciesName,\n        type: \"species\",\n        folder: folder.id,\n      },\n      { pack: \"teriock.species\" },\n    );\n  } else {\n    speciesItem = await foundry.utils.fromUuid(speciesItem.uuid);\n  }\n\n  await speciesItem.system.wikiPull({ notify: false });\n\n  return { speciesName, success: true };\n}\n\nconst speciesPromises = Object.values(CONFIG.TERIOCK.index.creatures).map(\n  (speciesName, index) =>\n    processSpecies(\n      speciesName,\n      index,\n      Object.values(CONFIG.TERIOCK.index.creatures).length,\n    ),\n);\n\nprogress.update({\n  pct: 0.1,\n  message: `Processing ${Object.values(CONFIG.TERIOCK.index.creatures).length} species in parallel...`,\n});\n\ntry {\n  const results = await Promise.all(speciesPromises);\n\n  progress.update({\n    pct: 1,\n    message: `Successfully processed ${results.length} species.`,\n  });\n\n  console.log(\n    `Completed processing ${results.length} species:`,\n    results.map((r) => r.speciesName),\n  );\n} catch (error) {\n  progress.update({\n    pct: 1,\n    message: `Error occurred during processing: ${error.message}`,\n  });\n  console.error(\"Error processing species:\", error);\n}",
  "sort": 0,
  "ownership": {
    "default": 0,
    "qf5JYGZKzM588nE6": 3
  },
  "flags": {},
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "exportSource": null,
    "coreVersion": "13.345",
    "systemId": "teriock",
    "systemVersion": "0.1.0",
    "createdTime": 1755506076847,
    "modifiedTime": 1757097187255,
    "lastModifiedBy": "Z8sCTHO0edFF1hYo"
  },
  "_key": "!macros!U0WfGPoPSLSystNU"
}
