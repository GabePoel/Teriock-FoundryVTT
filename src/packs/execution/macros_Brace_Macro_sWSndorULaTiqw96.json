{
  "name": "Brace Macro",
  "type": "script",
  "_id": "sWSndorULaTiqw96",
  "author": "IIjfAJm5Tf1B6G7t",
  "img": "icons/svg/dice-target.svg",
  "scope": "global",
  "command": "scope.chatData.system.buttons = [];\n\nfor (const target of scope.useData.targets) {\n  actor = target.actor;\n  \n  const dieSize = actor?.system?.braceDieSize || 6;\n  \n  let formula = `1d${dieSize}`;\n  if (scope.abilityData.parent.isProficient) {\n    formula =`(@p)d${dieSize}`;\n  } else if (scope.abilityData.parent.isFluent) {\n    formula = `(@f)d${dieSize}`;\n  }\n  \n  const roll = new Roll(formula, scope.useData.rollData);\n  await roll.evaluate();\n  scope.chatData.rolls.push(roll);\n  const total = roll.total;\n  \n  await actor.takeSetTempHp(total);\n  ui.notifications.info(`${target.name} is now braced.`)\n  if (!actor.effectKeys?.effect?.has(\"braced\")) {\n    await actor.createEmbeddedDocuments(\"ActiveEffect\", [\n      {\n        name: \"Braced\",\n        img: \"modules/game-icons-net/whitetransparent/bracers.svg\",\n        type: \"consequence\",\n        description: `You gain temporary HP as long as you remain stationary.`,\n        changes: [\n          { key: \"system.flags\", mode: 2, value: \"braced\", priority: 10 },\n        ]\n      }\n    ])\n  }\n  const oldHookId = await actor.getFlag(\"world\", \"bracedHookId\");\n  if (oldHookId) {\n    foundry.helpers.Hooks.off(\"moveToken\", oldHookId);\n  }\n  const actorUuid = actor.uuid;\n  const hookId = foundry.helpers.Hooks.on(\"moveToken\", async (document, movement, operation, user) => {\n    if (document.isOwner && document.actor && game.user.id === user.id && document.actor.uuid === actorUuid) {\n      const actor = document.actor;\n      if (actor.effectKeys?.effect?.has(\"braced\")) {\n        await actor.update({ \"system.hp.temp\": 0 });\n        console.log(actor.effectTypes?.effect)\n        try {\n          const effect = await actor.effectTypes?.effect?.find((e) => e.name === \"Braced\")\n          effect.delete();\n        } catch {}\n      }\n    }\n  })\n  await actor.setFlag(\"world\", \"bracedHookId\", hookId);\n}",
  "folder": null,
  "sort": 0,
  "ownership": {
    "default": 0,
    "IIjfAJm5Tf1B6G7t": 3
  },
  "flags": {},
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "exportSource": null,
    "coreVersion": "13.345",
    "systemId": "teriock",
    "systemVersion": "0.1.0",
    "createdTime": 1753210541350,
    "modifiedTime": 1753380347971,
    "lastModifiedBy": "IIjfAJm5Tf1B6G7t"
  },
  "_key": "!macros!sWSndorULaTiqw96"
}
